1.Project Vision
Per-tenant pass-through Openstack service will be an intermediate application between end tenant/user and cloud computing service provider. 
Our moderate vision of this application is to establish a user-friendly cloud computing service reseller, reduce the training time demanded by the Openstack platform itself. This goal can be further divided as follow:
•	Provide a user-friendly command-line UI. Give users some basic instruction at the welcome page so new users will at least know what or from where they should search and learn
•	Obtain user needs by asking simple questions instead of expecting formatted user request. The answers will be translate into correct http request that the service provider could accept
•	Generate metadata of the functionality and features for each service provider. There is lots of service providers registered on the platform. Sometimes even advanced users do not know which one could provide optimal solution to their needs. So we can write metadata for the service providers to reveal the features of their services. Users can either read the metadata or ask the user to make choice for them (in this case they should provide some more information such as the feature they want and the condition of their machine, etc.)
And surely we have a more ambitious and far-reaching goal which is to enable the combination of functions from different service providers in one request. That is to say, we want to make it possible for a tenant to use Nova from Intel and Neutron from Cisco at the same time. This is one of the branches undergoing in the MOC project. We may need further study to decide whether this is a practical deliverable of a 3 months’ project.

2.Roles of project

3.Discuss Scope
     Right now, we'll firstly focus on implementation and management of one service-which is to be decided(most probably Nova)-that offered by 
BU's openstack instance.That is, one openstack instance and single service.
     After this, we're going to try other services like Swift and Cinder.Moreover,dealing with multiple providers is also in our scope.

4.Things to explore:‏
  
  a.Make Openstack API‏
     # Make a terminal to simplify the front end designation
	# Use command lines to run the application
 
  b.Use python to complete the functionalization
	# Register for different openstack services in an easier way
	# Log in and log out
	# Connect the user to their expected openstack services
 
  c.Automated deployment of infrastructure in openstack‏‎
	# How many openstack servers and who are they?
	# How many kinds of services of openstack and what are they?
	# Automatically give certain channels by a serial questions for different user to connect to their expected openstack services
